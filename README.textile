# PersistentPanel - the panel that won't quit

A simple jQuery plugin for creating panels that remember whether they are open
or closed. Allows custom animations but has sensible defaults.

 - Creates a panel that opens and closes, vertically or horizontally, when a toggler element
is clicked
 - Remembers last state a user left the panel in and use that on page reload
 - Easy to use with defaults - just $('#somediv').persistentPanel();
 - You can pass in custom animations, cookie names, etc etc.
 - See examples/index.html for usage examples

## Usage Examples

(See examples/index.html)

## Options
 
<table>



|_.Setting name |_.Default value |_.Description

| changeTogglerContents | true | Whether to replace the contents of your
specified toggler element with the contents of togglerContentsOpen and
togglerContentsClosed when it your panel is opened and closed, respectively.
If you set this to false, the togglerContents settings will not be used and
the toggler element's contents will not be modified.

| cookieName | 'persistentPanel' | 
| defaultStatus | 'open' | 
| openDirection | 'down' | 
| speed | 500 | 
| toggler | '#panelToggler' | 
| togglerClassClosed | 'closed' | 
| togglerContentsClosed | (unicode arrow - depends on openDirection) | 
| togglerClassOpen | 'open' | 
| togglerContentsOpen | (unicode arrow - depends on openDirection)| 
| getCookie |  function(cookieName) {return $.cookie(cookieName);} | 
| setCookie |  function(cookieName, value) {$.cookie(cookieName, value, {
expires: 30, path: '/'});} |


h2. How to make a NON-persisting panel

If you want to use the other functionality of persistentPanel - the
animation, the toggler contents, etc - but do NOT want your panel to remember
its state when the page is reloaded, it's easy: give it a setCookie function
that doesn't actually set a cookie, like this:

setCookie: function(){return;}

In this case, when you load the page, the panel will always use its
defaultStatus setting.

Two warnings:

 - If there is already a cookie set for this panel (from before you started
 passing the useless setCookie function, for example), it will still load it,
 so whatever the cookie value is will override the defaultStatus setting.
 Delete the cookie and all will be well.
  - There may be a cookie set for this panel without your realizing it: if you
 didn't specify a cookieName, the cookieName is 'persistentPanel'. Maybe one
 of those was set by a different panel?
